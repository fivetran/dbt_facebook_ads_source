{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-05-22T22:16:43.127200Z", "invocation_id": "ed844e7d-11e4-41cc-87ab-bcbae646d4a6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.860934Z", "completed_at": "2024-05-22T22:16:37.890765Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.891351Z", "completed_at": "2024-05-22T22:16:37.891359Z"}], "thread_id": "Thread-1", "execution_time": 0.03374886512756348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_account_history_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.883938Z", "completed_at": "2024-05-22T22:16:37.896454Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.897062Z", "completed_at": "2024-05-22T22:16:37.897066Z"}], "thread_id": "Thread-3", "execution_time": 0.03808999061584473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_ad_set_history_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.886786Z", "completed_at": "2024-05-22T22:16:37.897329Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.899544Z", "completed_at": "2024-05-22T22:16:37.899548Z"}], "thread_id": "Thread-4", "execution_time": 0.040746212005615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_basic_ad_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.880947Z", "completed_at": "2024-05-22T22:16:37.898200Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.900520Z", "completed_at": "2024-05-22T22:16:37.900523Z"}], "thread_id": "Thread-2", "execution_time": 0.04297184944152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_ad_history_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.893217Z", "completed_at": "2024-05-22T22:16:37.898730Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.901324Z", "completed_at": "2024-05-22T22:16:37.901327Z"}], "thread_id": "Thread-1", "execution_time": 0.010373115539550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_campaign_history_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.903264Z", "completed_at": "2024-05-22T22:16:37.909704Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.915257Z", "completed_at": "2024-05-22T22:16:37.915262Z"}], "thread_id": "Thread-3", "execution_time": 0.01639389991760254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests\".\"facebook_ads_creative_history_data\"", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.909966Z", "completed_at": "2024-05-22T22:16:37.911223Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.915529Z", "completed_at": "2024-05-22T22:16:37.915532Z"}], "thread_id": "Thread-4", "execution_time": 0.009454011917114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.911746Z", "completed_at": "2024-05-22T22:16:37.912885Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.916011Z", "completed_at": "2024-05-22T22:16:37.916014Z"}], "thread_id": "Thread-2", "execution_time": 0.00942683219909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_ad_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.913636Z", "completed_at": "2024-05-22T22:16:37.914748Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.917329Z", "completed_at": "2024-05-22T22:16:37.917332Z"}], "thread_id": "Thread-1", "execution_time": 0.009983062744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_ad_set_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.922359Z", "completed_at": "2024-05-22T22:16:37.923555Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.940560Z", "completed_at": "2024-05-22T22:16:37.940566Z"}], "thread_id": "Thread-3", "execution_time": 0.022143125534057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_basic_ad_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.923833Z", "completed_at": "2024-05-22T22:16:37.925636Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.940838Z", "completed_at": "2024-05-22T22:16:37.940842Z"}], "thread_id": "Thread-4", "execution_time": 0.02222895622253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.926148Z", "completed_at": "2024-05-22T22:16:37.927253Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:37.941093Z", "completed_at": "2024-05-22T22:16:37.941096Z"}], "thread_id": "Thread-2", "execution_time": 0.02190113067626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_source_integration_tests_2.facebook_ads_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.969527Z", "completed_at": "2024-05-22T22:16:40.804372Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:40.806499Z", "completed_at": "2024-05-22T22:16:40.806502Z"}], "thread_id": "Thread-2", "execution_time": 3.0961127281188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    ad_set_id\n    \n as \n    \n    ad_set_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n\n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_id,\n        name as ad_name,\n        cast(account_id as bigint) as account_id,\n        cast(ad_set_id as bigint) as ad_set_id,   \n        cast(campaign_id as bigint) as campaign_id,\n        cast(creative_id as bigint) as creative_id,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.953300Z", "completed_at": "2024-05-22T22:16:40.805185Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:40.807262Z", "completed_at": "2024-05-22T22:16:40.807265Z"}], "thread_id": "Thread-4", "execution_time": 3.1088321208953857, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    ad_id\n    \n as \n    \n    ad_id\n    \n, \n    cast(null as TEXT) as \n    \n    ad_name\n    \n , \n    cast(null as TEXT) as \n    \n    adset_name\n    \n , \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    inline_link_clicks\n    \n as \n    \n    inline_link_clicks\n    \n, \n    \n    \n    spend\n    \n as \n    \n    spend\n    \n, \n    cast(null as integer) as \n    \n    reach\n    \n , \n    cast(null as float) as \n    \n    frequency\n    \n , \n    cast(null as TEXT) as fake_freq_name \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as bigint) as ad_id,\n        ad_name,\n        adset_name as ad_set_name,\n        date as date_day,\n        cast(account_id as bigint) as account_id,\n        impressions,\n        coalesce(inline_link_clicks,0) as clicks,\n        spend\n\n        \n            \n                \n            \n            \n                , frequency\n            \n\n        \n\n\n    \n        \n            \n                , reach\n            \n        \n    \n        \n            \n                , fake_freq_name\n            \n        \n    \n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.947009Z", "completed_at": "2024-05-22T22:16:40.803795Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:40.805693Z", "completed_at": "2024-05-22T22:16:40.805700Z"}], "thread_id": "Thread-3", "execution_time": 3.1101207733154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as TEXT) as \n    \n    bid_strategy\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    budget_remaining\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_set_id,\n        name as ad_set_name,\n        cast(account_id as bigint) as account_id,\n        cast(campaign_id as bigint) as campaign_id,\n        start_time as start_at,\n        end_time as end_at,\n        bid_strategy,\n        daily_budget,\n        budget_remaining,\n        status,\n        case when id is null and updated_time is null\n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:37.927973Z", "completed_at": "2024-05-22T22:16:40.804111Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:40.805969Z", "completed_at": "2024-05-22T22:16:40.805972Z"}], "thread_id": "Thread-1", "execution_time": 3.135140895843506, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    account_status\n    \n , \n    cast(null as TEXT) as \n    \n    business_country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    cast(null as TEXT) as \n    \n    timezone_name\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as bigint) as account_id,\n        _fivetran_synced,\n        name as account_name,\n        account_status,\n        business_country_code,\n        created_time as created_at,\n        currency,\n        timezone_name,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.069970Z", "completed_at": "2024-05-22T22:16:41.090640Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.092569Z", "completed_at": "2024-05-22T22:16:41.092576Z"}], "thread_id": "Thread-3", "execution_time": 0.03806900978088379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_source_relation__ad_id__updated_at.664b870e6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.080055Z", "completed_at": "2024-05-22T22:16:41.091112Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.093252Z", "completed_at": "2024-05-22T22:16:41.093255Z"}], "thread_id": "Thread-1", "execution_time": 0.030610084533691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.109064Z", "completed_at": "2024-05-22T22:16:41.113902Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.114489Z", "completed_at": "2024-05-22T22:16:41.114495Z"}], "thread_id": "Thread-1", "execution_time": 0.015014171600341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_source_relation__date_day__ad_id__account_id.9c647961f0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, account_id\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\n    group by source_relation, date_day, ad_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.103906Z", "completed_at": "2024-05-22T22:16:41.116656Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.122267Z", "completed_at": "2024-05-22T22:16:41.122272Z"}], "thread_id": "Thread-3", "execution_time": 0.02342820167541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.116963Z", "completed_at": "2024-05-22T22:16:41.124180Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.128617Z", "completed_at": "2024-05-22T22:16:41.128622Z"}], "thread_id": "Thread-1", "execution_time": 0.013586997985839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.130477Z", "completed_at": "2024-05-22T22:16:41.137319Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.137891Z", "completed_at": "2024-05-22T22:16:41.137896Z"}], "thread_id": "Thread-1", "execution_time": 0.008559226989746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_source_relation__ad_set_id__updated_at.ff1d43114a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_set_id, updated_at\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\n    group by source_relation, ad_set_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.124443Z", "completed_at": "2024-05-22T22:16:41.173440Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.181352Z", "completed_at": "2024-05-22T22:16:41.181363Z"}], "thread_id": "Thread-3", "execution_time": 0.058721065521240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__basic_ad\"\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.174499Z", "completed_at": "2024-05-22T22:16:41.187444Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.188003Z", "completed_at": "2024-05-22T22:16:41.188008Z"}], "thread_id": "Thread-1", "execution_time": 0.04953408241271973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.183631Z", "completed_at": "2024-05-22T22:16:41.193425Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.194046Z", "completed_at": "2024-05-22T22:16:41.194050Z"}], "thread_id": "Thread-3", "execution_time": 0.011685848236083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__ad_set_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.189764Z", "completed_at": "2024-05-22T22:16:41.195195Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.196549Z", "completed_at": "2024-05-22T22:16:41.196553Z"}], "thread_id": "Thread-1", "execution_time": 0.011199951171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_source_relation__account_id___fivetran_synced.f81aca1247", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, _fivetran_synced\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\n    group by source_relation, account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.196850Z", "completed_at": "2024-05-22T22:16:41.205714Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.209785Z", "completed_at": "2024-05-22T22:16:41.209790Z"}], "thread_id": "Thread-3", "execution_time": 0.01482701301574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.201791Z", "completed_at": "2024-05-22T22:16:41.210864Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:41.211445Z", "completed_at": "2024-05-22T22:16:41.211449Z"}], "thread_id": "Thread-1", "execution_time": 0.010820150375366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.042731Z", "completed_at": "2024-05-22T22:16:42.878722Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:42.879272Z", "completed_at": "2024-05-22T22:16:42.879277Z"}], "thread_id": "Thread-2", "execution_time": 2.007117986679077, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    stop_time\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as integer) as \n    \n    daily_budget\n    \n , \n    cast(null as integer) as \n    \n    lifetime_budget\n    \n , \n    cast(null as float) as \n    \n    budget_remaining\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        created_time as created_at,\n        cast(account_id as bigint) as account_id,\n        cast(id as bigint) as campaign_id,\n        name as campaign_name,\n        start_time as start_at,\n        stop_time as end_at,\n        status,\n        daily_budget,\n        lifetime_budget,\n        budget_remaining,\n        case when id is null and updated_time is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by updated_time desc) end = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.052368Z", "completed_at": "2024-05-22T22:16:43.064260Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.064878Z", "completed_at": "2024-05-22T22:16:43.064883Z"}], "thread_id": "Thread-3", "execution_time": 0.015110969543457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_source_relation__campaign_id__updated_at.82c4f9a2a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.056727Z", "completed_at": "2024-05-22T22:16:43.065904Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.066536Z", "completed_at": "2024-05-22T22:16:43.066540Z"}], "thread_id": "Thread-1", "execution_time": 0.016122817993164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.059999Z", "completed_at": "2024-05-22T22:16:43.067424Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.068026Z", "completed_at": "2024-05-22T22:16:43.068030Z"}], "thread_id": "Thread-2", "execution_time": 0.01684284210205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__campaign_history\"\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:41.059027Z", "completed_at": "2024-05-22T22:16:42.932078Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:42.932821Z", "completed_at": "2024-05-22T22:16:42.932828Z"}], "thread_id": "Thread-4", "execution_time": 2.051419973373413, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    page_link\n    \n as \n    \n    page_link\n    \n, \n    \n    \n    template_page_link\n    \n as \n    \n    template_page_link\n    \n, \n    \n    \n    url_tags\n    \n as \n    \n    url_tags\n    \n, \n    \n    \n    asset_feed_spec_link_urls\n    \n as \n    \n    asset_feed_spec_link_urls\n    \n, \n    \n    \n    object_story_link_data_child_attachments\n    \n as \n    \n    object_story_link_data_child_attachments\n    \n, \n    \n    \n    object_story_link_data_caption\n    \n as \n    \n    object_story_link_data_caption\n    \n, \n    \n    \n    object_story_link_data_description\n    \n as \n    \n    object_story_link_data_description\n    \n, \n    \n    \n    object_story_link_data_link\n    \n as \n    \n    object_story_link_data_link\n    \n, \n    \n    \n    object_story_link_data_message\n    \n as \n    \n    object_story_link_data_message\n    \n, \n    cast(null as TEXT) as \n    \n    template_app_link_spec_android\n    \n , \n    \n    \n    template_app_link_spec_ios\n    \n as \n    \n    template_app_link_spec_ios\n    \n, \n    cast(null as TEXT) as \n    \n    template_app_link_spec_ipad\n    \n , \n    cast(null as TEXT) as \n    \n    template_app_link_spec_iphone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id,\n        _fivetran_synced,\n        cast(id as bigint) as creative_id,\n        cast(account_id as bigint) as account_id,\n        name as creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        case when id is null and _fivetran_synced is null \n            then row_number() over (partition by source_relation order by source_relation)\n        else row_number() over (partition by source_relation, id order by _fivetran_synced desc) end = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.114058Z", "completed_at": "2024-05-22T22:16:43.121762Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.122286Z", "completed_at": "2024-05-22T22:16:43.122291Z"}], "thread_id": "Thread-1", "execution_time": 0.00939631462097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.118278Z", "completed_at": "2024-05-22T22:16:43.123151Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.124228Z", "completed_at": "2024-05-22T22:16:43.124231Z"}], "thread_id": "Thread-2", "execution_time": 0.007373809814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-22T22:16:43.109272Z", "completed_at": "2024-05-22T22:16:43.123404Z"}, {"name": "execute", "started_at": "2024-05-22T22:16:43.124500Z", "completed_at": "2024-05-22T22:16:43.124504Z"}], "thread_id": "Thread-3", "execution_time": 0.016940832138061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_source_relation___fivetran_id.2466dae947", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id\n    from \"redshift-test-kristin\".\"facebook_ads_source_tests_facebook_ads_source\".\"stg_facebook_ads__creative_history\"\n    group by source_relation, _fivetran_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 8.26391887664795, "args": {"favor_state": false, "empty_catalog": false, "partial_parse_file_diff": true, "strict_mode": false, "which": "generate", "static_parser": true, "compile": true, "log_format_file": "debug", "profiles_dir": "/Users/jamie.rodriguez/.dbt", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Facebook_ads/dbt_facebook_ads_source/integration_tests/logs", "use_colors_file": true, "populate_cache": true, "exclude": [], "log_level": "info", "indirect_selection": "eager", "printer_width": 80, "defer": false, "select": [], "print": true, "vars": {}, "macro_debugging": false, "log_format": "default", "cache_selected_only": false, "version_check": true, "send_anonymous_usage_stats": true, "use_colors": true, "static": false, "log_file_max_bytes": 10485760, "invocation_command": "dbt docs generate", "show_resource_report": false, "quiet": false, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "enable_legacy_logger": false, "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Facebook_ads/dbt_facebook_ads_source/integration_tests", "partial_parse": true, "introspect": true, "write_json": true}}